[
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/andrewruiz/MADA_course/andrew_ruiz-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/andrewruiz/MADA_course/andrew_ruiz-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "This is my website and data analysis portfolio. It currently under development. More content will be added throughout the semester, so make sure to visit again.\n\nPlease use the Menu Bar above to look around.\n\nThe “About Me” section is complete\n\n\n\n\nEmail: andrew.ruiz@uga.edu\nLinkedIn: Connect with me here"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "#load package\nsuppressPackageStartupMessages(library(dslabs))\nsuppressPackageStartupMessages(library(dplyr))\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(plotly))"
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Doctor of Public Health candidate, board-certified medical entomologist, and health scientist at CDC’s National Center for Environmental Health. My background is in mosquito control and surveillance. My dissertation research involves using AI to predict human cases of eastern equine encephalitis in Bristol County, Massachusetts based on mosquito surveillance, ecological, environmental, and demographic data. I have lived in 10 states (including DC) and 2 other countries (Germany and Ghana). I currently live in the Lenox/Morningside area of Atlanta. Outside of work and school, I like spending time with my pets and family.\n\n\n\n\nKayaking at Stone Mountain"
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Placeholder file for the future data/results presentation exercise."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "The time required to travel to healthcare facilities can affect how often people receive. Longer travel times may mean patients see the doctor less often and may lead to adverse health outcomes, such as higher BMI. It may also change an individual’s perception of their own health status (Kelly, Hulme, Farragher, & Clarke, 2016)."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nFourteen people were included in this study. Their height, weight, and gender were recorded during their interview. The participants were asked how long (in minutes) it takes takes to travel to the nearest healthcare facility from their home. The participants were also asked to rate their health from using poor, fair, good, excellent."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nFourteen people were included in this study. Their height, weight, and gender were recorded during their interview. The participants were asked how long (in minutes) it takes takes to travel to the nearest healthcare facility from their home. The participants were also asked to rate their health from using poor, fair, good, excellent."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nDoes travel time to access healthcare affect health outcomes, such as weight, and alter a person’s perception of their own health status?\nAn example of a similar study can he found in (Kelly et al., 2016)."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nData was collected during in-person interviews with 14 people. Interview responses were entered into an Excel spreadsheet by multiple study employees."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nData was cleaned using R code. Records that fell outside of defined parameters were removed. Of the 14 orginal records, 9 remained after cleaning"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nSimple scatter and box plots were used to plots visualize the data. Descriptive tables were created. Finally, linear models were generated in R using the ggplot2 package."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nView the tables and figures below for a better understanding of the data.\nTable 1 shows a summary of the data.\n\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nSR_health\n0\n1\n4\n7\n0\n4\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nnumeric\nHC_time\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n33.33333\n19.68502\n10\n20\n25\n50\n65\n▇▂▂▂▃"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\n\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\n\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nIn this study, there were no statistically significant relationships between travel time to the nearest healthcare facility and"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nGiven the small sample size, the results are not generalizable to any population. A larger sample size would be needed for more reliable results. Weight is not a proxy for health and it is the only health outcome included in this study."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nTravel time to access healthcare has been demonstrated in other studies as a factor that can lead to adverse health outcomes. Larger sample sizes and better data collection and input methods could help to illustrate the relationship."
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Andrew's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "aboutme.html#personal",
    "href": "aboutme.html#personal",
    "title": "About me",
    "section": "",
    "text": "Doctor of Public Health candidate\njlsadkjf\n\n\nthis is a tests"
  },
  {
    "objectID": "aboutme.html#professional",
    "href": "aboutme.html#professional",
    "title": "About me",
    "section": "Professional",
    "text": "Professional\nCDC hired me during the Zika outbreak in the US. I have been a health scientist there since 2017.\nBefore CDC, I was the operation manager for SW Florida at a private sector mosquito control company. Before that I managed the eastern equine encephalitis field surveillance in Massachusetts. Before that, I was an entomologist for the City of New Orleans’ Mosquito Control Board."
  },
  {
    "objectID": "aboutme.html#education",
    "href": "aboutme.html#education",
    "title": "About me",
    "section": "Education",
    "text": "Education\n\n\nUniversity of New Mexico Tulane University University of Georgia\n\nBA -Geography/GIS MSPH -Tropical Medicine DrPH Candidate -Health Policy & Management"
  },
  {
    "objectID": "index.html#thanks-for-dropping-by",
    "href": "index.html#thanks-for-dropping-by",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "This is my website and data analysis portfolio. It currently under development. More content will be added throughout the semester, so make sure to visit again.\n\nPlease use the Menu Bar above to look around.\n\nThe “About Me” section is complete\n\n\n\n\nEmail: andrew.ruiz@uga.edu\nLinkedIn: Connect with me here"
  },
  {
    "objectID": "index.html#feel-free-to-contact-me-if-you-have-questions",
    "href": "index.html#feel-free-to-contact-me-if-you-have-questions",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Email: andrew.ruiz@uga.edu\nLinkedIn: Your LinkedIn Profile"
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at /Users/andrewruiz/MADA_course/andrew_ruiz-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate min max empty n_unique whitespace\n1 SR_health             0             1   4   7     0        4          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n3 HC_time               0             1  33.3 19.7  10  20  25  50   65 ▇▂▂▂▃\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable2.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n# Boxplot of Weight by Travel time to nearest health facility\np5 &lt;- mydata %&gt;%\n    ggplot(aes(x=SR_health, y=Weight)) + \n    geom_boxplot() +\n    theme(legend.position = \"none\")\n\nplot(p5)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"Weight_by_SR_health.png\")\nggsave(filename = figure_file, plot=p5)\n\nSaving 7 x 5 in image\n\n\n\n# Scatter plot of Travel time to nearest health facility vs Weight stratified by Gender\np6 &lt;- mydata %&gt;%\n    ggplot(aes(x=Weight, y=HC_time, color=Gender)) +\n    geom_point()  # Adds scatter plot points\n\nplot(p6)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"SR-Health_by_Weight_stratified.png\")\nggsave(filename = figure_file, plot=p6)\n\nSaving 7 x 5 in image\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at /Users/andrewruiz/MADA_course/andrew_ruiz-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                         `Allowed Values`\n  &lt;chr&gt;           &lt;chr&gt;                                         &lt;chr&gt;           \n1 Height          \"height in centimeters\"                       numeric value &gt;…\n2 Weight          \"weight in kilograms\"                         numeric value &gt;…\n3 Gender          \"identified gender (male/female/other)\"       M/F/O/NA        \n4 HC_time         \"travel time to nearest healthcare facility … numeric value &gt;…\n5 SR_health       \"self-reported health state, response to the… poor, fair, goo…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height    &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155…\n$ Weight    &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender    &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\",…\n$ HC_time   &lt;dbl&gt; 15, 25, 30, 20, 45, 10, 50, 65, 5, 10, 15, 20, 55, 40\n$ SR_health &lt;chr&gt; \"good\", \"good\", \"excellent\", \"poor\", \"fair\", \"refused\", \"poo…\n\nsummary(rawdata)\n\n    Height              Weight          Gender             HC_time     \n Length:14          Min.   :  45.0   Length:14          Min.   : 5.00  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:15.00  \n Mode  :character   Median :  70.0   Mode  :character   Median :22.50  \n                    Mean   : 602.7                      Mean   :28.93  \n                    3rd Qu.:  90.0                      3rd Qu.:43.75  \n                    Max.   :7000.0                      Max.   :65.00  \n                    NA's   :1                                          \n  SR_health        \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender HC_time SR_health\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;    \n1 180        80 M           15 good     \n2 175        70 O           25 good     \n3 sixty      60 F           30 excellent\n4 178        76 F           20 poor     \n5 192        90 NA          45 fair     \n6 6          55 F           10 refused  \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSR_health\n0\n1\n4\n9\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70.0\n90.00\n7000\n▇▁▁▁▁\n\n\nHC_time\n0\n1.00\n28.93\n18.93\n5\n15\n22.5\n43.75\n65\n▇▅▃▃▃\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSR_health\n0\n1\n4\n9\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nHC_time\n0\n1.00\n28.85\n19.70\n5\n15.00\n20\n45\n65\n▇▅▂▃▃\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSR_health\n0\n1\n4\n9\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\nHC_time\n0\n1.00\n28.85\n19.70\n5\n15.00\n20\n45\n65\n▇▅▂▃▃\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nSR_health\n0\n1\n4\n9\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nHC_time\n0\n1\n31.82\n20.03\n5\n17.5\n25\n47.5\n65\n▇▇▂▅▅\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSR_health\n0\n1\n4\n9\n0\n5\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179.0\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85.0\n110\n▇▂▃▃▂\n\n\nHC_time\n0\n1\n31.82\n20.03\n5\n17.5\n25\n47.5\n65\n▇▇▂▅▅\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nSR_health\n0\n1\n4\n7\n0\n4\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\nHC_time\n0\n1\n33.33\n19.69\n10\n20\n25\n50\n65\n▇▂▂▂▃\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#scatter-plot-1",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#scatter-plot-1",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "6.1 Scatter plot 1",
    "text": "6.1 Scatter plot 1\n\n\n\n\n\n\n\n\nFigure 2: Travel time to access healthcare by weight -stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#box-plot-1",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#box-plot-1",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "6.2 Box plot 1",
    "text": "6.2 Box plot 1\n\n\n\n\n\n\n\n\nFigure 3: Weight by self-reported health status.\n\n\n\n\n\n\n\n\n\nTable 3: Linear model fit table 3.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n174.7346939\n39.3640594\n4.4389399\n0.0113433\n\n\nSR_healthgood\n-7.2925170\n28.6897378\n-0.2541856\n0.8118841\n\n\nSR_healthpoor\n0.6224490\n22.4824685\n0.0276860\n0.9792388\n\n\nSR_healthrefused\n10.6530612\n38.4051156\n0.2773865\n0.7952290\n\n\nHC_time\n-0.2387755\n0.7051065\n-0.3386375\n0.7519124\n\n\n\n\n\n\n\n\nIn this linear model, none of the relationships are statistically significant at alpha = 0.05."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#when-plotted-there-are-distinct-streaks-in-the-data.-this-is-especially-evident-in-the-life-expectancy-vs-log_10-population-these-streaks-likely-represent-the-trajectory-of-individual-countries-over-time.-in-general-as-levels-of-development-improve-so-do-health-outcomes-like-life-expectancy.",
    "href": "coding-exercise/coding-exercise.html#when-plotted-there-are-distinct-streaks-in-the-data.-this-is-especially-evident-in-the-life-expectancy-vs-log_10-population-these-streaks-likely-represent-the-trajectory-of-individual-countries-over-time.-in-general-as-levels-of-development-improve-so-do-health-outcomes-like-life-expectancy.",
    "title": "R Coding Exercise",
    "section": "When plotted, there are distinct “streaks” in the data. This is especially evident in the Life Expectancy vs log\\(_{10}\\) Population, These streaks likely represent the trajectory of individual countries over time. In general, as levels of development improve, so do health outcomes like life expectancy.",
    "text": "When plotted, there are distinct “streaks” in the data. This is especially evident in the Life Expectancy vs log\\(_{10}\\) Population, These streaks likely represent the trajectory of individual countries over time. In general, as levels of development improve, so do health outcomes like life expectancy.\n\nNote: in both plots there is an outlier showing a visible decrease in life expectancy. Without countries or years in the plots, it is difficult to pin point the exact cause of that decrease, but it is likely due to a single, tranformational event. In this case, I would attribute that to the civil war and genocide in Rwanda in the early 1990s.\n\nlibrary(ggplot2)\n\n# Plot life expectancy as a function of infant mortality\nplot_le_vs_im &lt;- ggplot(africa_mort_expect, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Life Expectancy vs Infant Mortality\",\n       x = \"Infant Mortality\",\n       y = \"Life Expectancy\")\n\nplot_le_vs_im\n\nWarning: Removed 226 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n#plot life expectancy vs population with population on a log scale\nplot_le_vs_pop_log &lt;- ggplot(africa_pop_expect, aes(x = population, y = life_expectancy)) +\n    geom_point() +\n    theme_minimal() +\n    labs(title = \"Life Expectancy vs Population\",\n         x = \"Population (Log Scale)\",\n         y = \"Life Expectancy\") +\n    scale_x_log10()\n\nplot_le_vs_pop_log\n\nWarning: Removed 51 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#creating-object-from-africadata-for-the-year-2000",
    "href": "coding-exercise/coding-exercise.html#creating-object-from-africadata-for-the-year-2000",
    "title": "R Coding Exercise",
    "section": "creating object from africadata for the year 2000",
    "text": "creating object from africadata for the year 2000\n\n# filter data for year == 2000\nafricadata2000 &lt;- africadata %&gt;%\n  filter(year == 2000)\n\n#examine the structure and summary of africadata2000\nstr(africadata2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#new-plots-using-only-data-from-2000",
    "href": "coding-exercise/coding-exercise.html#new-plots-using-only-data-from-2000",
    "title": "R Coding Exercise",
    "section": "new plots using only data from 2000",
    "text": "new plots using only data from 2000\n\n# plot infant mortality vs life expectancy for year=2000\nplot_le_vs_im_2000 &lt;- ggplot(africadata2000, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Life Expectancy vs Infant Mortality, year=2000\",\n       x = \"Infant Mortality\",\n       y = \"Life Expectancy\")\nplot(plot_le_vs_im_2000)\n\n\n\n\n\n\n\n# plot life expectancy vs population (log10) for year=2000\nplot_le_vs_pop_log_2000 &lt;- ggplot(africadata2000, aes(x = population, y = life_expectancy)) +\n    geom_point() +\n    theme_minimal() +\n    labs(title = \"Life Expectancy vs Population Year = 2000\",\n         x = \"Population (Log Scale)\",\n         y = \"Life Expectancy\") +\n    scale_x_log10()\n\nplot_le_vs_pop_log\n\nWarning: Removed 51 rows containing missing values (geom_point)."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#new-plots-using-only-data-from-the-year-2000-in-the-africadata-file",
    "href": "coding-exercise/coding-exercise.html#new-plots-using-only-data-from-the-year-2000-in-the-africadata-file",
    "title": "R Coding Exercise",
    "section": "new plots using only data from the year 2000 in the africadata file",
    "text": "new plots using only data from the year 2000 in the africadata file\n\n# plot infant mortality vs life expectancy for year=2000\nplot_le_vs_im_2000 &lt;- ggplot(africadata2000, aes(x = infant_mortality, y = life_expectancy)) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Life Expectancy vs Infant Mortality, year=2000\",\n       x = \"Infant Mortality\",\n       y = \"Life Expectancy\")\nplot(plot_le_vs_im_2000)\n\n\n\n\n\n\n\n# plot life expectancy vs population (log10) for year=2000\nplot_le_vs_pop_log_2000 &lt;- ggplot(africadata2000, aes(x = population, y = life_expectancy)) +\n    geom_point() +\n    theme_minimal() +\n    labs(title = \"Life Expectancy vs Population Year = 2000\",\n         x = \"Population (Log Scale)\",\n         y = \"Life Expectancy\") +\n    scale_x_log10()\n\nplot_le_vs_pop_log\n\nWarning: Removed 51 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#linear-models",
    "href": "coding-exercise/coding-exercise.html#linear-models",
    "title": "R Coding Exercise",
    "section": "linear models",
    "text": "linear models\n\nlife_expectancy~infant_mortality\n\nfit1 &lt;- lm(life_expectancy ~ infant_mortality, data = africadata2000)\n\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = africadata2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#linear-models-1",
    "href": "coding-exercise/coding-exercise.html#linear-models-1",
    "title": "R Coding Exercise",
    "section": "linear models",
    "text": "linear models\n\nlife_expectancy~population\n\nfit2 &lt;- lm(life_expectancy ~ population, data = africadata2000)\n\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = africadata2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#interpreting-the-results-for-the-linear-models",
    "href": "coding-exercise/coding-exercise.html#interpreting-the-results-for-the-linear-models",
    "title": "R Coding Exercise",
    "section": "Interpreting the results for the linear models",
    "text": "Interpreting the results for the linear models\n\nfit1 examines the relationship between life expectancy and infant mortality where life expectancy is the dependent variable\n\ngiven the low p-value, there is a statistically significant negative relationship between life expectancy and infant mortality"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#fit1-examines-the-relationship-between-life-expectancy-and-infant-mortality-where-life-expectancy-is-the-dependent-variable",
    "href": "coding-exercise/coding-exercise.html#fit1-examines-the-relationship-between-life-expectancy-and-infant-mortality-where-life-expectancy-is-the-dependent-variable",
    "title": "R Coding Exercise",
    "section": "fit1 examines the relationship between life expectancy and infant mortality, where life expectancy is the dependent variable",
    "text": "fit1 examines the relationship between life expectancy and infant mortality, where life expectancy is the dependent variable\n\ngiven the low p-value, there is a statistically significant negative relationship between life expectancy and infant mortality"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#fit2-examines-the-relationship-between-life-expectancy-and-population-where-life-expectancy-is-the-dependent-variable.",
    "href": "coding-exercise/coding-exercise.html#fit2-examines-the-relationship-between-life-expectancy-and-population-where-life-expectancy-is-the-dependent-variable.",
    "title": "R Coding Exercise",
    "section": "fit2 examines the relationship between life expectancy and population, where life expectancy is the dependent variable.",
    "text": "fit2 examines the relationship between life expectancy and population, where life expectancy is the dependent variable.\n\ngiven the high p-value the model does not indicate a statistically significant relationship between life expectancy and population"
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Data Exercise",
    "section": "",
    "text": "The source of the text for this exercise come from public comments in response to Public Citizens second petition for rulemaking to the Federal Election Commission (FEC) in July, 2023. Public Citizen asked the FEC to clarify the subject of “fraudulent misrepresentation” regarding the use of AI, including deep fake technology, and open a Notice of Availability that would allow public comment.\nFifty pdfs were downloaded from the FEC site. Each pdf contained comments in response to Public Citizens petition.\nThese fifty documents made up the corpus for the text analysis. The process is described below.\n\n#load packages\nlibrary(pdftools)\n\nUsing poppler version 23.04.0\n\nlibrary(tm)\n\nLoading required package: NLP\n\nlibrary(topicmodels)\nlibrary(syuzhet)\nlibrary(tokenizers)\nlibrary(here)\n\nhere() starts at /Users/andrewruiz/MADA_course/andrew_ruiz-MADA-portfolio"
  },
  {
    "objectID": "data-exercise/data-exercise.html#locate-and-read-the-pdfs",
    "href": "data-exercise/data-exercise.html#locate-and-read-the-pdfs",
    "title": "Data Exercise",
    "section": "Locate and read the PDFs",
    "text": "Locate and read the PDFs\n\n# Specify the folder containing the PDFs\npdf_folder &lt;- here(\"data-exercise\", \"data\", \"raw-data\")\n\n# Read all PDF files from the folder\nfile_list &lt;- list.files(path = pdf_folder, pattern = \"*.pdf\", full.names = TRUE)"
  },
  {
    "objectID": "data-exercise/data-exercise.html#process-files",
    "href": "data-exercise/data-exercise.html#process-files",
    "title": "Data Exercise",
    "section": "Process files",
    "text": "Process files\nNow that the files are located and read, we will begin processing them for analysis\n\n# Extract text from each PDF\ntext_data &lt;- lapply(file_list, pdf_text)\n\n# Combine the text into one character vector, one element per PDF\ntext_data_combined &lt;- sapply(text_data, paste, collapse = \" \")\n\n# Create a corpus from the combined text\ndocs &lt;- Corpus(VectorSource(text_data_combined))"
  },
  {
    "objectID": "data-exercise/data-exercise.html#cleaning-the-text",
    "href": "data-exercise/data-exercise.html#cleaning-the-text",
    "title": "Data Exercise",
    "section": "Cleaning the text",
    "text": "Cleaning the text\nTo analyze the text we will need to clean in and prepare it for use.\n\nclean_corpus_initial &lt;- function(corpus) {\n  original_length &lt;- length(corpus)\n  # convert text to lowercase\n  corpus &lt;- tm_map(corpus, content_transformer(tolower))\n  # remove punctuation\n  corpus &lt;- tm_map(corpus, removePunctuation)\n  # remove numbers\n  corpus &lt;- tm_map(corpus, removeNumbers)\n  # remove stop words (common words like 'the', 'and', 'is)\n  corpus &lt;- tm_map(corpus, removeWords, stopwords(\"english\"))\n  # remove extra whitespaces\n  corpus &lt;- tm_map(corpus, stripWhitespace)\n  \n  # Return the cleaned corpus along with the indices of dropped documents\n  return(list(corpus = corpus, original_length = original_length))\n}\n\n# Apply initial cleaning\nresult &lt;- clean_corpus_initial(docs)\n\nWarning in tm_map.SimpleCorpus(corpus, content_transformer(tolower)):\ntransformation drops documents\n\n\nWarning in tm_map.SimpleCorpus(corpus, removePunctuation): transformation drops\ndocuments\n\n\nWarning in tm_map.SimpleCorpus(corpus, removeNumbers): transformation drops\ndocuments\n\n\nWarning in tm_map.SimpleCorpus(corpus, removeWords, stopwords(\"english\")):\ntransformation drops documents\n\n\nWarning in tm_map.SimpleCorpus(corpus, stripWhitespace): transformation drops\ndocuments\n\n# There was a warning that documents had been dropped. This code will check to see which ones and how many.\ncorpus_cleaned &lt;- result$corpus\noriginal_length &lt;- result$original_length\n\ncat(\"Original number of documents:\", original_length, \"\\n\")\n\nOriginal number of documents: 50 \n\ncat(\"Number of documents after cleaning:\", length(corpus_cleaned), \"\\n\")\n\nNumber of documents after cleaning: 50 \n\ncat(\"Number of documents dropped:\", original_length - length(corpus_cleaned), \"\\n\")\n\nNumber of documents dropped: 0 \n\n# Identify the indices of dropped documents\ndropped_indices &lt;- setdiff(1:original_length, 1:length(corpus_cleaned))\ncat(\"Indices of dropped documents:\", paste(dropped_indices, collapse = \", \"), \"\\n\")\n\nIndices of dropped documents:  \n\n# The output indicates that zero documents were dropped\n\nNow that the text is clean we can proceed to the next step.\n\n# Create a Document-Term Matrix (DTM) from the cleaned text documents (docs_cleaned_initial).\n# Remove rows (documents) from the DTM where the sum of term frequencies is zero,\n# effectively filtering out empty documents.\ndtm_initial &lt;- DocumentTermMatrix(corpus_cleaned)\ndtm_initial &lt;- dtm_initial[rowSums(as.matrix(dtm_initial)) &gt; 0, ]\n\nWe will now create a Latent Dirichlet Allocation (LDA) model. An LDA is statistical model used in natural language processing and machine learning.\n\n# Set the number of topics to 8\n# this can be modified depending on the need and results\nk_initial &lt;- 8\n\n# Create an LDA model using the Document-Term Matrix (dtm_initial) with the specified number of topics.\n# Control parameters may include the random seed for reproducibility (seed = 4321).\nlda_model_initial &lt;- LDA(dtm_initial, k = k_initial, control = list(seed = 4321))\n\n# Retrieve the terms associated with each topic, specifying a maximum of 8 terms per topic.\ntopics_initial &lt;- terms(lda_model_initial, 8)\n\n# Print the initial topics along with potential terms that describe each topic.\nprint(\"Initial topics with potential names included:\")\n\n[1] \"Initial topics with potential names included:\"\n\nprint(topics_initial)\n\n     Topic 1        Topic 2   Topic 3      Topic 4    Topic 5     Topic 6     \n[1,] \"campaign\"     \"mary\"    \"campaign\"   \"john\"     \"ads\"       \"content\"   \n[2,] \"comments\"     \"michael\" \"deepfakes\"  \"patricia\" \"provided\"  \"can\"       \n[3,] \"ads\"          \"robert\"  \"election\"   \"donna\"    \"campaigns\" \"campaign\"  \n[4,] \"deceptive\"    \"david\"   \"candidate\"  \"susan\"    \"never\"     \"generative\"\n[5,] \"content\"      \"barbara\" \"political\"  \"linda\"    \"depicting\" \"election\"  \n[6,] \"misleading\"   \"richard\" \"commission\" \"margaret\" \"law\"       \"federal\"   \n[7,] \"saying\"       \"linda\"   \"public\"     \"thomas\"   \"comments\"  \"use\"       \n[8,] \"ai‐generated\" \"susan\"   \"fraudulent\" \"david\"    \"use\"       \"commission\"\n     Topic 7      Topic 8    \n[1,] \"campaign\"   \"campaign\" \n[2,] \"comments\"   \"ads\"      \n[3,] \"saying\"     \"deceptive\"\n[4,] \"deceptive\"  \"law\"      \n[5,] \"misleading\" \"campaigns\"\n[6,] \"content\"    \"never\"    \n[7,] \"understand\" \"comments\" \n[8,] \"release\"    \"depicting\"\n\n\nWe now have 8 topics with the most common words associated with each topic. Notice that topic 2 is a list of first names. This is not especially helpful in this case. However, let’s proceed with these topics and see if we can fix them later. Next we will see the theme associated with each document.\n\n# Extract the topic for each document for the initial model\ntopic_probabilities_initial &lt;- posterior(lda_model_initial)$topics\ndoc_topics_initial &lt;- apply(topic_probabilities_initial, 1, which.max)\n\n# Create a data frame for the document-topic associations for the initial model\ndoc_topics_df_initial &lt;- data.frame(Document = names(doc_topics_initial), MostLikelyTopic = doc_topics_initial)\n\n# View the first few rows of the document-topic association for the initial model\nhead(doc_topics_df_initial)\n\n  Document MostLikelyTopic\n1        1               3\n2        2               3\n3        3               6\n4        4               6\n5        5               3\n6        6               6\n\n\nLet’s include those names in the stopword list to see if the results are better.\n\n# Extend the stopwords list with common names for refined cleaning\ncustom_stopwords &lt;- c(stopwords(\"en\"), \"john\", \"patricia\", \"donna\", \"susan\", \"linda\", \"margaret\", \"thomas\", \"david\")\n\n# Refined cleaning function that includes removal of first names\nclean_corpus_refined &lt;- function(corpus) {\n  corpus &lt;- tm_map(corpus, content_transformer(tolower))\n  corpus &lt;- tm_map(corpus, removePunctuation)\n  corpus &lt;- tm_map(corpus, removeNumbers)\n  corpus &lt;- tm_map(corpus, removeWords, custom_stopwords)\n  corpus &lt;- tm_map(corpus, stripWhitespace)\n  return(corpus)\n}\n# Apply refined cleaning\ndocs_cleaned_refined &lt;- clean_corpus_refined(docs)\n\nWarning in tm_map.SimpleCorpus(corpus, content_transformer(tolower)):\ntransformation drops documents\n\n\nWarning in tm_map.SimpleCorpus(corpus, removePunctuation): transformation drops\ndocuments\n\n\nWarning in tm_map.SimpleCorpus(corpus, removeNumbers): transformation drops\ndocuments\n\n\nWarning in tm_map.SimpleCorpus(corpus, removeWords, custom_stopwords):\ntransformation drops documents\n\n\nWarning in tm_map.SimpleCorpus(corpus, stripWhitespace): transformation drops\ndocuments\n\n\nNow let’s rerun the code with the refined text.\n\n# DTM for refined analysis\ndtm_refined &lt;- DocumentTermMatrix(docs_cleaned_refined)\ndtm_refined &lt;- dtm_refined[rowSums(as.matrix(dtm_refined)) &gt; 0, ]\n\n\n# Refined topic modeling\nk_refined &lt;- 8\nlda_model_refined &lt;- LDA(dtm_refined, k = k_refined, control = list(seed = 4321))\ntopics_refined &lt;- terms(lda_model_refined, 8)\nprint(\"Refined topics without first names:\")\n\n[1] \"Refined topics without first names:\"\n\nprint(topics_refined)\n\n     Topic 1      Topic 2      Topic 3      Topic 4   Topic 5     Topic 6    \n[1,] \"never\"      \"content\"    \"never\"      \"mary\"    \"ads\"       \"ads\"      \n[2,] \"ads\"        \"election\"   \"ads\"        \"michael\" \"campaign\"  \"campaign\" \n[3,] \"law\"        \"campaign\"   \"comments\"   \"barbara\" \"campaigns\" \"never\"    \n[4,] \"campaign\"   \"deepfakes\"  \"law\"        \"robert\"  \"deceptive\" \"comments\" \n[5,] \"misleading\" \"federal\"    \"campaign\"   \"nancy\"   \"provided\"  \"law\"      \n[6,] \"americans\"  \"use\"        \"provided\"   \"richard\" \"depicting\" \"provided\" \n[7,] \"content\"    \"generative\" \"use\"        \"james\"   \"comments\"  \"campaigns\"\n[8,] \"worried\"    \"elections\"  \"misleading\" \"carol\"   \"voters\"    \"depicting\"\n     Topic 7             Topic 8     \n[1,] \"campaign\"          \"campaign\"  \n[2,] \"candidate\"         \"ads\"       \n[3,] \"commission\"        \"fec\"       \n[4,] \"fraudulent\"        \"election\"  \n[5,] \"political\"         \"generative\"\n[6,] \"deepfakes\"         \"federal\"   \n[7,] \"public\"            \"can\"       \n[8,] \"misrepresentation\" \"political\" \n\n\nSo it turns out that adding the names as stop words was not that helpful. It jsut returned another topic filled with names. For now, we will move on.\n\n# Extract the topic for each document for the refined model\ntopic_probabilities_refined &lt;- posterior(lda_model_refined)$topics\ndoc_topics_refined &lt;- apply(topic_probabilities_refined, 1, which.max)\n\n# Create a data frame for the document-topic associations for the refined model\ndoc_topics_df_refined &lt;- data.frame(Document = names(doc_topics_refined), MostLikelyTopic = doc_topics_refined)\n\n# View the first few rows of the document-topic association for the refined model\nhead(doc_topics_df_refined)\n\n  Document MostLikelyTopic\n1        1               2\n2        2               2\n3        3               2\n4        4               2\n5        5               2\n6        6               2\n\n\nIt turns out that topic two is not associated with documents 1-6 now that names were added to the stopword list. More investigation would be needed to uncover the meaning of this. ## Sentiment analysis now let’s take a look at the sentiment for each document. For this we will use the Bing method\n\n# Perform sentiment analysis on the combined text data\nsentiment_scores &lt;- get_sentiment(text_data_combined, method = \"bing\")\n\n# View the sentiment scores\nhead(sentiment_scores)\n\n[1]  -6 -24  -6  30  11  -8\n\n# Create a vector of PDF document names\npdf_document_names &lt;- basename(file_list)\n\n# Create a data frame with document names and sentiment scores\nsentiment_df &lt;- data.frame(DocumentName = pdf_document_names, SentimentScore = sentiment_scores)\n\n# Print the first few rows of the data frame to see the mapping\nhead(sentiment_df)\n\n          DocumentName SentimentScore\n1             aapc.pdf             -6\n2 accountable_tech.pdf            -24\n3              acm.pdf             -6\n4            Adobe.pdf             30\n5          afl_cio.pdf             11\n6         arnetfox.pdf             -8\n\nprint(sentiment_df)\n\n                           DocumentName SentimentScore\n1                              aapc.pdf             -6\n2                  accountable_tech.pdf            -24\n3                               acm.pdf             -6\n4                             Adobe.pdf             30\n5                           afl_cio.pdf             11\n6                          arnetfox.pdf             -8\n7  AsianAmericans_advancing_justice.pdf            -16\n8                       brennan_ctr.pdf             -7\n9                                BS.pdf              2\n10                               bv.pdf             -2\n11                               ca.pdf            -72\n12      campaign_for_accountability.pdf            -13\n13             catholic_social_just.pdf              1\n14                               cb.pdf           -131\n15                     common_cause.pdf            -37\n16                              CPD.pdf             -5\n17                             CREW.pdf             -6\n18                            crew2.pdf             -4\n19               ctr_democracy_tech.pdf             -5\n20            ctr_for_ai_dig_policy.pdf              0\n21                               dc.pdf           -222\n22                       demo_first.pdf             -3\n23                              dnc.pdf            -13\n24              election_protection.pdf             -2\n25                             epic.pdf              4\n26                     future_priva.pdf             -3\n27                              GMU.pdf             -4\n28                       harvardlaw.pdf            -20\n29                         holtzman.pdf            -13\n30 Institute for Strategic Dialogue.pdf             -5\n31                   integrity_inst.pdf              1\n32                        issue_dia.pdf              2\n33                               jm.pdf              3\n34                               lc.pdf           -241\n35                              lwv.pdf              2\n36                               MM.pdf              4\n37                               MR.pdf            -24\n38                        partnerAI.pdf              3\n39              people_power_united.pdf             -4\n40                              ppu.pdf              5\n41                protect_democracy.pdf            -13\n42                         pub_citz.pdf             -1\n43                     she_persists.pdf            -21\n44                      stabilityAI.pdf             21\n45                        StanfordU.pdf              3\n46                          technet.pdf             10\n47                           unidos.pdf            -21\n48                      US_congress.pdf             -1\n49                            wiley.pdf            -28\n50                   workers_circle.pdf             -2\n\n\nFor the text used in this analysis, the sentiment may be a little misleading. These comments were written in support of a second petition for the FEC to allow public comments of rulemaking. Most public comments in these forums begin by thanking the regulatory agency for allowing comments. Those sections tend to be very positive. However, the comments often continue by describing potential problem. Those tend to use negative language. The Bing method results are centered around 0. A zero score indicates completely neutral setiment. The larger negative scores indicate negative sentiment. Large positive scores indicate positive sentiment.\n\nLet’s take a look at a different way to identify sentiment. For this we will use the NRC method which classifies sentiment into categories that may make better sense of the data.\nThese results display word counts for the number of words in each document that fall into NRC’s sentiment categories. The bar graph represents the percent to words that fall into each category. The barchart represents all the text across all 50 documents.\n\n# define the data\nnrc_data &lt;- get_nrc_sentiment(text_data_combined)\n\n# Access the data frame columns for emotions and sentiments\n#anger_items &lt;- which(nrc_data$anger &gt; 0)\n#joy_items &lt;- which(nrc_data$joy &gt; 0)\n\n# Print sentences associated with specific emotions\n#print(text_data_combined[anger_items])\n#print(text_data_combined[joy_items])\n\n# View the entire sentiment data frame\nprint(nrc_data)\n\n   anger anticipation disgust fear joy sadness surprise trust negative positive\n1     10            6       6   13   5       3        4    22       21       37\n2     21           13      11   22   7       6        7    28       42       24\n3     11           15       7   15   8       7        5    34       26       44\n4     14           24       7   20  20      13        9    51       30       92\n5     16           16       7   19  12      12        7    37       29       56\n6     11           11       4   12   8       4        2    27       19       43\n7     17           11       6   24   6      13        4    28       34       44\n8     18           18       8   16   9       7        3    34       30       50\n9      1            4       1    2   2       1        1    11        8       20\n10     2            0       1    3   2       0        0     2        2        4\n11    68           48      39   75  29      52       27    97      133      158\n12    26           19      10   25  13      17        5    53       47       72\n13     6            8       3   11   7       2        5    17       15       24\n14   116           86      77  134  62      97       46   163      251      263\n15    31           21      15   38  15      26        9    58       66       92\n16     7            8       3   13   6       3        4    23       15       30\n17     9            3       6    7   3       4        2    11       16       18\n18     6            5       4    9   3       2        3    19       13       23\n19    18           17      10   21  13      15        7    48       46       79\n20    26           42      16   37  21      22       18    89       62      132\n21   161          139     100  194  93     131       79   245      374      390\n22     2            4       2    3   4       3        2    10       11       19\n23    17            8      12   18   5      10        7    34       35       47\n24     2            2       0    4   2       0        1     3        7       10\n25    11           10       5   13  14       9        6    32       30       69\n26    23           20      10   23  14      12        8    48       39       80\n27    19           23       8   21  22      13       10    58       48       83\n28    34           33      17   36  17      18       11    61       74       94\n29    20           18      13   19  10      13        7    43       51       59\n30     4            2       2    3   3       4        0     9        9       15\n31    24           35      11   35  19      16       11    78       57      124\n32     9           11       5   15  11      12        7    40       25       51\n33     2            1       2    3   5       2        0    11        7       16\n34   188          124     130  213  83     168       81   229      414      357\n35    12           15       5   11  10       6        5    29       20       52\n36     1            1       0    1   1       0        0     4        1        4\n37    17            9       8   23   7      10        2    38       44       53\n38    14           22       8   16  18      10        9    53       33       74\n39     3            3       2    4   3       3        1    11        8       19\n40    28           30      20   28  36      21       14    46       54       96\n41    21           15      12   20  12      17        6    52       49       72\n42    20           21      14   18  20      19       12    65       59       91\n43    16           14       8   21  12       6        5    34       35       48\n44    16           27       9   21  20      10        6    56       37       92\n45    10           10       6   12   6       5        0    28       22       44\n46     6            9       3    8   6       3        3    25       15       42\n47    19           16       8   20   7      12        5    41       35       61\n48     2            2       2    5   3       1        2    13        5       23\n49    15           13       8   22  13       9       11    45       44       56\n50     5            3       3    4   3       3        1    10       10       17\n\n# View only the positive and negative valence columns\nprint(nrc_data[, c(\"negative\", \"positive\")])\n\n   negative positive\n1        21       37\n2        42       24\n3        26       44\n4        30       92\n5        29       56\n6        19       43\n7        34       44\n8        30       50\n9         8       20\n10        2        4\n11      133      158\n12       47       72\n13       15       24\n14      251      263\n15       66       92\n16       15       30\n17       16       18\n18       13       23\n19       46       79\n20       62      132\n21      374      390\n22       11       19\n23       35       47\n24        7       10\n25       30       69\n26       39       80\n27       48       83\n28       74       94\n29       51       59\n30        9       15\n31       57      124\n32       25       51\n33        7       16\n34      414      357\n35       20       52\n36        1        4\n37       44       53\n38       33       74\n39        8       19\n40       54       96\n41       49       72\n42       59       91\n43       35       48\n44       37       92\n45       22       44\n46       15       42\n47       35       61\n48        5       23\n49       44       56\n50       10       17\n\ndocument_sentiment &lt;- data.frame(DocumentName = pdf_document_names, \n                                 Negative = nrc_data$negative, \n                                 Positive = nrc_data$positive)\n\n# Print the data frame with document names and sentiment scores\nprint(document_sentiment)\n\n                           DocumentName Negative Positive\n1                              aapc.pdf       21       37\n2                  accountable_tech.pdf       42       24\n3                               acm.pdf       26       44\n4                             Adobe.pdf       30       92\n5                           afl_cio.pdf       29       56\n6                          arnetfox.pdf       19       43\n7  AsianAmericans_advancing_justice.pdf       34       44\n8                       brennan_ctr.pdf       30       50\n9                                BS.pdf        8       20\n10                               bv.pdf        2        4\n11                               ca.pdf      133      158\n12      campaign_for_accountability.pdf       47       72\n13             catholic_social_just.pdf       15       24\n14                               cb.pdf      251      263\n15                     common_cause.pdf       66       92\n16                              CPD.pdf       15       30\n17                             CREW.pdf       16       18\n18                            crew2.pdf       13       23\n19               ctr_democracy_tech.pdf       46       79\n20            ctr_for_ai_dig_policy.pdf       62      132\n21                               dc.pdf      374      390\n22                       demo_first.pdf       11       19\n23                              dnc.pdf       35       47\n24              election_protection.pdf        7       10\n25                             epic.pdf       30       69\n26                     future_priva.pdf       39       80\n27                              GMU.pdf       48       83\n28                       harvardlaw.pdf       74       94\n29                         holtzman.pdf       51       59\n30 Institute for Strategic Dialogue.pdf        9       15\n31                   integrity_inst.pdf       57      124\n32                        issue_dia.pdf       25       51\n33                               jm.pdf        7       16\n34                               lc.pdf      414      357\n35                              lwv.pdf       20       52\n36                               MM.pdf        1        4\n37                               MR.pdf       44       53\n38                        partnerAI.pdf       33       74\n39              people_power_united.pdf        8       19\n40                              ppu.pdf       54       96\n41                protect_democracy.pdf       49       72\n42                         pub_citz.pdf       59       91\n43                     she_persists.pdf       35       48\n44                      stabilityAI.pdf       37       92\n45                        StanfordU.pdf       22       44\n46                          technet.pdf       15       42\n47                           unidos.pdf       35       61\n48                      US_congress.pdf        5       23\n49                            wiley.pdf       44       56\n50                   workers_circle.pdf       10       17\n\n# Create a bar graph of emotions\nbarplot(\n  sort(colSums(prop.table(nrc_data[, 1:8]))), \n  horiz = TRUE, \n  cex.names = 0.7, \n  las = 1, \n  main = \"Emotions in Text\", \n  xlab = \"Percentage\"\n)"
  }
]